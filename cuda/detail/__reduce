//
// Created by egi on 1/26/20.
//

#ifndef LIBCUPP_PROPOSAL_CUDA_DETAIL_ACCUMULATE_H
#define LIBCUPP_PROPOSAL_CUDA_DETAIL_ACCUMULATE_H

#include <type_traits>

#define __FULL_WARP_MASK 0xffffffff

inline __device__ unsigned lane_id()
{
  unsigned ret;
  asm volatile ("mov.u32 %0, %laneid;" : "=r"(ret));
  return ret;
}

template <typename _Tp>
class __warp_shfl_reduce
{
public:
  __warp_shfl_reduce () = default;

  template <typename _BinaryOperation>
  __device__ _Tp __reduce_value (_Tp __val, _BinaryOperation __binary_op)
  {
    for (int i = warpSize / 2; i > 0; i /= 2)
      __val = __binary_op (__val, __shfl_xor_sync (__FULL_WARP_MASK, __val, i, warpSize));
    return __val;
  }
};

template <typename _Tp>
class __warp_shrd_reduce {
  _Tp *warp_shared_workspace;
public:
  __warp_shrd_reduce() = delete;
  __warp_shrd_reduce(_Tp *warp_shared_workspace_arg) : warp_shared_workspace (warp_shared_workspace_arg) {}

  template <typename _BinaryOperation>
  __device__ _Tp __reduce_value (_Tp __val, _BinaryOperation __binary_op)
  {

  }
};

#endif //LIBCUPP_PROPOSAL_CUDA_DETAIL_ACCUMULATE_H
